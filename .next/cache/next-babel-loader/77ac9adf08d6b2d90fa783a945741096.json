{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nvar API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDkm97VBg-lGsqwbfAyATcuRn22PDPhSsY\",\n  authDomain: \"goog-auth-5adb0.firebaseapp.com\",\n  projectId: \"goog-auth-5adb0\",\n  storageBucket: \"goog-auth-5adb0.appspot.com\",\n  messagingSenderId: \"808254345195\",\n  appId: \"1:808254345195:web:6e53ff5b0625454bbad3ae\"\n}; // Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig);\nexport var auth = firebase.auth();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nvar googleEmail = '';\nvar googleUID = '';\nvar googleDis = '';\nexport var signInWithGoogle = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return auth.signInWithPopup(provider);\n\n          case 2:\n            res = _context.sent;\n            googleEmail = res.user.email;\n            googleUID = res.user.uid;\n            googleDis = res.user.displayName;\n\n            if (!false) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 8:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              console.log('EMAIL: ', googleEmail);\n              console.log('UID ', res.user.uid);\n              console.log('DISPLAY NAME ', res.user.displayName);\n              axios.post(\"\".concat(API_URL, \"/auth/local/register\"), {\n                username: googleDis,\n                email: googleEmail,\n                password: googleUID\n              }).post(\"\".concat(API_URL, \"/auth/local/\"), {\n                identifier: googleEmail,\n                password: googleUID\n              }).then(function (response) {\n                //set token response from Strapi for server validation\n                Cookie.set(\"token\", response.data.jwt); //resolve the promise to set loading to false in SignUp form\n\n                resolve(response); //redirect back to home page for restaurance selection\n\n                Router.push(\"/\");\n                console.log(\"Google Login Success\");\n              })[\"catch\"](function (error) {\n                //reject the promise and pass the error object back to the form\n                // reject(error);\n                console.log(\"Google Login Fail\");\n              });\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function signInWithGoogle() {\n    return _ref.apply(this, arguments);\n  };\n}(); // export const googleLogin = (identifier, password) => {\n//   //prevent function from being ran on the server\n//   if (typeof window === \"undefined\") {\n//     return;\n//   }\n//   return new Promise((resolve, reject) => {\n//     axios\n//       .post(`${API_URL}/auth/local/`, { identifier, password })\n//       .then((res) => {\n//         //set token response from Strapi for server validation\n//         Cookie.set(\"token\", res.data.jwt);\n//         //resolve the promise to set loading to false in SignUp form\n//         resolve(res);\n//         //redirect back to home page for restaurance selection\n//         Router.push(\"/\");\n//         console.log(\"Google Login\")\n//       })\n//       .catch((error) => {\n//         //reject the promise and pass the error object back to the form\n//         reject(error);\n//         console.log(\"Google Login: \", identifier)\n//       });\n//   });\n// };","map":{"version":3,"sources":["C:/MIT Files/Week 28/deliveroo-clone-tutorial/components/firebase.js"],"names":["firebase","initializeApp","useEffect","Router","Cookie","axios","API_URL","process","env","NEXT_PUBLIC_API_URL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","googleEmail","googleUID","googleDis","signInWithGoogle","signInWithPopup","res","user","email","uid","displayName","Promise","resolve","reject","console","log","post","username","password","identifier","then","response","set","data","jwt","push","error"],"mappings":"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","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport 'firebase/compat/auth';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDkm97VBg-lGsqwbfAyATcuRn22PDPhSsY\",\r\n    authDomain: \"goog-auth-5adb0.firebaseapp.com\",\r\n    projectId: \"goog-auth-5adb0\",\r\n    storageBucket: \"goog-auth-5adb0.appspot.com\",\r\n    messagingSenderId: \"808254345195\",\r\n    appId: \"1:808254345195:web:6e53ff5b0625454bbad3ae\"\r\n  };\r\n\r\n// Initialize Firebase \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nlet googleEmail = '';\r\nlet googleUID = '';\r\nlet googleDis = '';\r\nexport const signInWithGoogle = async () => {\r\n  \r\n    const res = await auth.signInWithPopup(provider)\r\n    googleEmail = res.user.email;\r\n    googleUID = res.user.uid;\r\n    googleDis = res.user.displayName;\r\n    \r\n\r\n    if (typeof window === \"undefined\") {\r\n      return;\r\n    }\r\n  \r\n    return new Promise((resolve, reject) => {\r\n      console.log('EMAIL: ', googleEmail)\r\n      console.log('UID ', res.user.uid)\r\n      console.log('DISPLAY NAME ', res.user.displayName)\r\n      axios\r\n        .post(`${API_URL}/auth/local/register`, {username: googleDis, email: googleEmail, password: googleUID })\r\n        .post(`${API_URL}/auth/local/`, {identifier: googleEmail, password: googleUID })\r\n        .then((response) => {\r\n          //set token response from Strapi for server validation\r\n          Cookie.set(\"token\", response.data.jwt);\r\n  \r\n          //resolve the promise to set loading to false in SignUp form\r\n          resolve(response);\r\n          //redirect back to home page for restaurance selection\r\n          Router.push(\"/\");\r\n          console.log(\"Google Login Success\")\r\n        })\r\n        .catch((error) => {\r\n          //reject the promise and pass the error object back to the form\r\n          // reject(error);\r\n          console.log(\"Google Login Fail\")\r\n        });\r\n    });\r\n    \r\n};\r\n\r\n// export const googleLogin = (identifier, password) => {\r\n//   //prevent function from being ran on the server\r\n//   if (typeof window === \"undefined\") {\r\n//     return;\r\n//   }\r\n\r\n//   return new Promise((resolve, reject) => {\r\n//     axios\r\n//       .post(`${API_URL}/auth/local/`, { identifier, password })\r\n//       .then((res) => {\r\n//         //set token response from Strapi for server validation\r\n//         Cookie.set(\"token\", res.data.jwt);\r\n\r\n//         //resolve the promise to set loading to false in SignUp form\r\n//         resolve(res);\r\n//         //redirect back to home page for restaurance selection\r\n//         Router.push(\"/\");\r\n//         console.log(\"Google Login\")\r\n//       })\r\n//       .catch((error) => {\r\n//         //reject the promise and pass the error object back to the form\r\n//         reject(error);\r\n//         console.log(\"Google Login: \", identifier)\r\n//       });\r\n//   });\r\n// };\r\n\r\n\r\n\r\n    "]},"metadata":{},"sourceType":"module"}